replicaCount: 1

namespace: default

toolr:
  name: toolr
  container:
    image: jasonsun9406/toolr:master_49
  service:
    type: NodePort
    port: 8080
    targetPort: 8000
    nodePort: 30001
  config:
    data:
      - key: PORT
        value: "8000"
      - key: FLASK_ENV
        value: "qa"

scheme: HTTP

# Add application settings here. They will be added as a Configmap object and mounted in your Deployment.
# Replace '{}' with settings to apply app settings.
# eg. 
# appSettings: 
#   food: apple
#   drink: milk
appSettings: {}

webapi:
  name: webapi-qa # follow naming standard of ${webapi_name}-${env}
  image:
    repository: httpd
    tag: latest
    imagePullPolicy: IfNotPresent
  replicas: 2
  rollingUpdate:
    enabled: true
    maxSurge: 2
    maxUnavailable: 0
  containerPort: 80
  podLabels: {}
  command: []
  args: []

  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  probes: # by default livesness and readiness probes are enable
    enabled: true
  livenessProbe:
    tcpProbe: false
    initialDelaySeconds: 15
    periodSeconds: 20
    path: /
    timeoutSeconds: 1
    scheme: HTTP
    tcpPort: 8080
  readinessProbe:
    tcpProbe: false
    initialDelaySeconds: 5
    periodSeconds: 10
    path: /
    timeoutSeconds: 1
    scheme: HTTP
    tcpPort: 8080


# Enable to include secrets for app
secrets:
  enabled: false
  mountPath: /var/run/secrets/app
  # Replace '{}' with secrets to mount in your app
  # eg. 
  # secretValues:
  #   Database__Password: SOMESECUREPASSWORD
  secretValues: {}
  
  # Additional Secret mounts
  # Defines additional mounts with secrets. Secrets must be manually created in the namespace.
  # This allows you to mount shared secrets as long as the secret exists in your namespace
  extraSecretMounts: []
  # - name: shared-secret-mount
  #   mountPath: /etc/secrets
  #   subPath: ""
  #   secretName: shared-secret
  #   readOnly: true


service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 80
  nodePort: 30001

ingress:
  enabled: false
  host: fake.blahblah.com

canary:
  enabled: false
  progressDeadlineSeconds: 600
  service:
    port: 8000
    portDiscovery: true
  skipAnalysis: False
  analysis:
    interval: 10s
    threshold: 2
    iterations: 2
    metrics:
    # minimum req success rate (non 5xx responses)
      RequestSuccessRate:
        thresholdRange:
          min: 99
        interval: 10
      RequestDuration:
        thresholdRange:
          max: 55
        interval: 30
    webhooks: {}
